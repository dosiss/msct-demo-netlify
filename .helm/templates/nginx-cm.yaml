---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Chart.Name }}-nginx
  labels:
    service: {{ .Chart.Name }}
data:
  nginx.conf: |
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;
    events {
        worker_connections 1024;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        access_log /var/log/nginx/access.log main;
        sendfile on;
        keepalive_timeout 65;
        server_tokens off;

        server {
            listen {{ pluck .Values.werf.env .Values.ports.http | first | default .Values.ports.http._default }}; # non-system port to use non-root user
            server_name localhost;
            charset utf-8;

            root /usr/share/nginx/html;
            index index.html;
            error_page 404 /404.html;

            absolute_redirect off;

            location = /healthz {
                access_log off;
                add_header 'Content-Type' 'text/plain';
                return 200 "healthy";
            }

            # /videos => mascot-api/videos
            location ~ ^/videos/(.*)$ {
{{ if not (eq .Values.global.env "prod-mascot") }}
               rewrite ^/videos/(.*)$ https://minio-api.{{ .Values.global.env }}.c27.online/mascot-videos/$1 permanent;
{{ else }}
               rewrite ^/videos/(.*)$ https://minio-api.mascot.games/mascot-videos/$1 permanent;
{{ end }}
            }

            # try looking files in different places
            location ~ ^/(.+)$ {
                try_files $uri $uri.html $uri/index.html =404;
            }
        }
    }
